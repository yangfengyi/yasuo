{"version":3,"file":"yasuo.modern.js","sources":["../src/data/constants.ts","../src/error/index.ts","../src/yasuo.ts"],"sourcesContent":["export const Win = window;","import { Win } from '../data/constants'\r\ntype ErrorInfo = any;\r\n\r\n// 监控页面错误\r\nclass ErrorTrace {\r\n  private errorInfo: ErrorInfo;\r\n\r\n  constructor() {\r\n    this.errorInfo = {};\r\n  }\r\n\r\n  // 全局捕获 同步 + 异步 的错误\r\n  private globalError() {\r\n    console.log(`error: yasuo global error init`);\r\n    Win.onerror = function (\r\n      eventOrMessage: Event | string,\r\n      scriptURL?: string,\r\n      lineNum?: number,\r\n      colNum?: number,\r\n      error?: Error\r\n    ){\r\n      const data = JSON.stringify({\r\n        scriptURL,\r\n        lineNum,\r\n        colNum,\r\n        error\r\n      })\r\n\r\n      console.log(`[global error] ${eventOrMessage}`)\r\n\r\n      console.log(data)\r\n\r\n      // TODO: 错误上报\r\n\r\n      // 防止爆红\r\n      return true\r\n    }\r\n  }\r\n\r\n  // 资源请求失败，比如图片 404\r\n  private networkError() {\r\n    Win.addEventListener(\r\n      'error',\r\n      function(e: ErrorEvent) {\r\n        if (e.target !== Win) {\r\n          console.log(`网络错误 ${e.target}`)\r\n        }\r\n\r\n        console.log(`网络错误 ${e.message}`)\r\n\r\n        // TODO: 错误上报\r\n      },\r\n      true\r\n    )\r\n  }\r\n\r\n  // 捕获promise的错误 (所有promise的reject都可以捕获到)\r\n  private promiseError() {\r\n    Win.addEventListener('unhandledrejection', function(e: PromiseRejectionEvent): boolean {\r\n      e.preventDefault();\r\n\r\n      console.log(`promise error ${e.reason}`)\r\n\r\n      return true;\r\n    })\r\n  }\r\n\r\n  // iframe 的报错，iframe 的报错，需要对每个 frame 单独去绑定\r\n  private iframeError() {\r\n    const frames = Win.frames;\r\n    for (let i = 0; i < frames.length; i++){\r\n      frames[i].addEventListener(\r\n        'error',\r\n        (e:ErrorEvent) => {\r\n          console.log(`iframe error event ${e}`)\r\n        },\r\n        true\r\n      )\r\n\r\n      frames[i].addEventListener(\r\n        'unhandledrejection',\r\n        (e: PromiseRejectionEvent) => {\r\n          console.log(`iframe error event ${e}`)\r\n        },\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  public run() {\r\n    this.globalError();\r\n    this.networkError();\r\n    this.promiseError();\r\n    // this.iframeError();\r\n  }\r\n}\r\n\r\nexport default ErrorTrace;","import {YasuoOptions} from \"./typings/type\";\r\nimport ErrorTrace from \"./error\";\r\n\r\n/**\r\n * SDK入口\r\n */\r\nclass Yasuo {\r\n  // 初始化代码\r\n  constructor(options: YasuoOptions) {\r\n\r\n    // 开启错误监控\r\n    if (options.captureError) {\r\n      const errorTrace = new ErrorTrace();\r\n      errorTrace.run();\r\n    }\r\n  }\r\n}\r\n\r\n// usage\r\n// new Yasuo(options)\r\n\r\nexport default Yasuo"],"names":["Win","window","ErrorTrace","constructor","errorInfo","this","globalError","console","log","onerror","eventOrMessage","scriptURL","lineNum","colNum","error","data","JSON","stringify","networkError","addEventListener","e","target","message","promiseError","preventDefault","reason","iframeError","frames","i","length","run","Yasuo","options","captureError"],"mappings":"AAAaA,MAAAA,EAAMC,OCInB,MAAMC,EAGJC,cAFQC,KAAAA,eAGN,EAAAC,KAAKD,UAAY,GAIXE,cACNC,QAAQC,IAAI,kCACZR,EAAIS,QAAU,SACZC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAOC,KAAKC,UAAU,CAC1BN,UAAAA,EACAC,QAAAA,EACAC,OAAAA,EACAC,MAAAA,IAUF,OAPAP,QAAQC,sBAAsBE,KAE9BH,QAAQC,IAAIO,IAKL,GAKHG,eACNlB,EAAImB,iBACF,QACA,SAASC,GACHA,EAAEC,SAAWrB,GACfO,QAAQC,IAAI,QAAQY,EAAEC,UAGxBd,QAAQC,IAAI,QAAQY,EAAEE,aAIxB,GAKIC,eACNvB,EAAImB,iBAAiB,qBAAsB,SAASC,GAKlD,OAJAA,EAAEI,iBAEFjB,QAAQC,IAAI,iBAAiBY,EAAEK,WAExB,IAKHC,cACN,MAAMC,EAAS3B,EAAI2B,OACnB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IACjCD,EAAOC,GAAGT,iBACR,QACCC,IACCb,QAAQC,0BAA0BY,OAEpC,GAGFO,EAAOC,GAAGT,iBACR,qBACCC,IACCb,QAAQC,0BAA0BY,OAEpC,GAKCU,MACLzB,KAAKC,cACLD,KAAKa,eACLb,KAAKkB,gBCtFT,MAAMQ,EAEJ5B,YAAY6B,GAGNA,EAAQC,eACS,IAAI/B,GACZ4B"}